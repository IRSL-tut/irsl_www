#!/usr/bin/env python3
import rospy
from std_msgs.msg import Float64MultiArray

class ArmSplitterNode:
    def __init__(self):
        rospy.init_node("arm_splitter_node")
        self.arm_pub = rospy.Publisher("/arm_controller/command", Float64MultiArray, queue_size=10)
        self.gripper_pub = rospy.Publisher("/gripper_controller/command", Float64MultiArray, queue_size=10)
        rospy.Subscriber("/arm_controller/input", Float64MultiArray, self.callback)
        rospy.loginfo("✅ arm_splitter_node 起動完了")
        rospy.spin()

    def callback(self, msg):
        if len(msg.data) != 9:
            rospy.logwarn("⚠️ 期待された9軸分のデータが受信されていません")
            return
        arm_msg = Float64MultiArray()
        arm_msg.data = msg.data[:7]
        gripper_msg = Float64MultiArray()
        gripper_msg.data = msg.data[7:]
        self.arm_pub.publish(arm_msg)
        self.gripper_pub.publish(gripper_msg)
        rospy.loginfo_throttle(1.0, f"✅ 転送 arm={arm_msg.data}, gripper={gripper_msg.data}")

if __name__ == "__main__":
    try:
        ArmSplitterNode()
    except rospy.ROSInterruptException:
        pass






